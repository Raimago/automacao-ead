import os
import json
import requests
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# üîπ Carregar credenciais do GitHub Secrets
google_credentials = os.getenv("GOOGLE_CREDENTIALS_JSON")
if not google_credentials:
    raise ValueError("‚ùå ERRO: A vari√°vel GOOGLE_CREDENTIALS_JSON est√° vazia! Verifique os Secrets no GitHub.")

creds_dict = json.loads(google_credentials)
# üîπ Autentica√ß√£o no Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(os.getenv("SHEET_ID")).sheet1

# üîπ Configura√ß√£o da API EAD
EAD_API_URL = "https://ead.conhecimentointegrado.com.br/api/v1/transacoes"
API_KEY = os.getenv("EAD_API_KEY")

# üîπ Fun√ß√£o para buscar transa√ß√µes da API
def get_transactions():
    headers = {
        "x-auth-token": API_KEY,
        "accept": "application/json"
    }
    
    all_transactions = []
    page = 1  # Come√ßamos pela p√°gina 1

    while True:
        url = f"{EAD_API_URL}?page={page}"
        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            try:
                data = response.json()
                if not data:
                    break  # Se a resposta estiver vazia, n√£o h√° mais p√°ginas

                all_transactions.extend(data)  # Adiciona os dados da p√°gina atual
                page += 1  # Passa para a pr√≥xima p√°gina

            except json.JSONDecodeError:
                print("‚ö†Ô∏è ERRO: A API retornou uma resposta inv√°lida.")
                print("Resposta da API:", response.text)
                break
        else:
            print(f"‚ùå ERRO: API retornou c√≥digo {response.status_code}.")
            print("Resposta da API:", response.text)
            break

    return all_transactions
